apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: create-git-repo
  title: Create GitHub Repository
  description: Create a new GitHub Repository
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Informe o nome do repositório e seu token
      properties:
        repositoryName:
          title: Repository Name
          type: string
          description: Nome do repositório
        repositoryUserToken:
          title: User Token
          type: string
          description: Github Token

  steps:
    - id: createGithubRepository
      action: github:create:repo
      name: createGithubRepository
      input:
        repositoryName: ${{ parameters.repositoryName }}
        repositoryUserToken: ${{ parameters.repositoryUserToken }}
    - id: fetch-java
      name: Fetch Java
      action: fetch:template
      input:
        url: ./skeletons/java
        targetPath: ./app
        values:
          name: ${{ parameters.repositoryName }}
    - id: fetch-catalog
      name: Fetch Catalog
      action: fetch:template
      input:
        url: ./skeletons/default
        targetPath: ./catalog
        values:
          name: ${{ parameters.repositoryName }}
    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.repositoryName }}
        repoUrl: ${{ parameters.repositoryName }}
    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog/catalog-info.yaml'
  output:
    links:
      - title: ${{ parameters.repositoryName }}
        url: https://github.com/rafaelsulimann/${{ parameters.repositoryName }}